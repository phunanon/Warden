generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["typedSql"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.db"
}

model Guild {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  sf             BigInt   @unique
  auditChannelSf BigInt?
}

model Message {
  id        Int      @id @default(autoincrement())
  at        DateTime @default(now())
  guildSf   BigInt
  channelSf BigInt
  messageSf BigInt
  authorSf  BigInt
  content   String

  @@unique([guildSf, channelSf, messageSf])
}

model Incident {
  id             Int      @id @default(autoincrement())
  at             DateTime @default(now())
  guildSf        BigInt
  channelSf      BigInt
  offenderSf     BigInt
  messageSf      BigInt
  msgContent     String
  categories     String
  context        String
  ignoredBecause String?

  probations  Probation[]
  punishments Punishment[]
}

model Probation {
  id                 Int      @id @default(autoincrement())
  at                 DateTime @default(now())
  originalIncidentId Int
  expiresAt          DateTime
  caution            String?
  notification       String?
  startInformed      Boolean  @default(false)

  originalIncident Incident     @relation(fields: [originalIncidentId], references: [id], onDelete: Cascade)
  Punishment       Punishment[]
}

model Punishment {
  id               Int      @id @default(autoincrement())
  at               DateTime @default(now())
  probationId      Int
  secondIncidentId Int
  until            DateTime

  probation      Probation @relation(fields: [probationId], references: [id], onDelete: Cascade)
  secondIncident Incident  @relation(fields: [secondIncidentId], references: [id], onDelete: Cascade)
}
